{"version":3,"sources":["webpack:///./ui/Slide.js"],"names":["Carousel","el","options","key","_this","this","_classCallCheck","_defineProperty","animationType","selector","previousButton","nextButton","activeClass","loop","delay","wrap","dots","promiseBefore","paginationParent","animateOnInit","startingIndex","paginationWrapper","accessibility","paginationButtons","slides","map","spon_slide__WEBPACK_IMPORTED_MODULE_1___default","a","$el","init","_objectSpread","defaults","Object","assign","mitt__WEBPACK_IMPORTED_MODULE_0__","module","hot","accept","err","console","error"],"mappings":";;;;;;waAoCqBA,EAoBpB,SAAAA,EAAYC,EAAIC,EAASC,GAAK,IAAAC,EAAAC,kGAAAC,CAAAD,KAAAL,GAAAO,EAAAF,KAAA,YAlB7BG,cAAe,YACfC,SAAU,oBACVC,eAAgB,oBAChBC,WAAY,oBACZC,YAAa,aACbC,MAAM,EACNC,MAAO,IACPC,MAAM,EACNC,MAAM,EACNC,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfC,cAAe,kBAAM,GACrBC,kBAAmB,0CACnBC,eAAe,EACfC,kBAAmB,SAAAC,GAAM,OAAIA,EAAOC,IAAI,iBAAM,gCAGjBlB,EAAAF,KAAA,QAkBtB,WACO,IAAIqB,EAAAC,EAAMvB,EAAKwB,IAAKxB,EAAKF,SAEjC2B,SArBuBtB,EAAAF,KAAA,UAmCpB,cAlCTA,KAAKH,0UAAL4B,IAAoBzB,KAAK0B,SAAa7B,GACtCG,KAAKF,IAAMA,EAEX6B,OAAOC,OAAO5B,KAAM2B,OAAAE,EAAA,EAAAF,IAEpB3B,KAAKuB,IAAM3B,GAmCIkC,EAAOC,IAAIC,OAAO,SAASC,GACxCA,GACJC,QAAQC,MAAMF","file":"4.bundle.1537312226028.js","sourcesContent":["import mitt from 'mitt'\nimport Slide from 'spon-slide'\n\n/** *\n * @namespace Carousel\n * @class Carousel\n * @desc This class handles Carousels... \n * @example \n * \n * js: \n * \n * new Carousel(document.getElementById('test'), {}, 'test-node').mount()\n * \n * Required markup:\n * \n * <div class=\"relative overflow-hidden\" data-ui=\"Carousel\">\n\t\t<ul>\n\t\t\t<li data-slide-item>{{ loop.index }}</li>\n\t\t\t<li data-slide-item>{{ loop.index }}</li>\n\t\t\t<li data-slide-item>{{ loop.index }}</li>\n\t\t</ul>\n\t\t<a href=\"#0\" data-slide-prev>prev</a>\n\t\t<a href=\"#0\" data-slide-next>next</a>\n\t</div>\n *\n\n * @param {HTMLElement} el - node to bind to\n * @param {Object} options - options\n * @param {String} key - key name\n *\n * @property {Boolean} options.XXX - only allow one Carousel to be open at a time\n * @property {Number} options.XXX - set one of the Carousels to be open\n * \n * @return {Carousel}\n */\n\nexport default class Carousel {\n\tdefaults = {\n\t\tanimationType: 'animation',\n\t\tselector: '[data-slide-item]',\n\t\tpreviousButton: '[data-slide-prev]',\n\t\tnextButton: '[data-slide-next]',\n\t\tactiveClass: 'is-current',\n\t\tloop: false,\n\t\tdelay: 6000,\n\t\twrap: true,\n\t\tdots: false,\n\t\tpromiseBefore: false,\n\t\tpaginationParent: false,\n\t\tanimateOnInit: false,\n\t\tstartingIndex: () => 0,\n\t\tpaginationWrapper: '<div class=\"c-slide__pagination\"></div>',\n\t\taccessibility: true,\n\t\tpaginationButtons: slides => slides.map(() => '<button type=\"button\" />')\n\t}\n\n\tconstructor(el, options, key) {\n\t\tthis.options = { ...this.defaults, ...options }\n\t\tthis.key = key\n\n\t\tObject.assign(this, mitt())\n\n\t\tthis.$el = el\n\t\t// bind the dom events\n\t\t//\tthis.$$events = createEvents.call(this, this.$el, this.events)\n\t}\n\n\t/** *\n\t * @memberof Carousel\n\t * @method mount\n\t * @desc Add the events\n\t *\n\t * @return {void}\n\t */\n\tmount = () => {\n\t\tconst slide = new Slide(this.$el, this.options)\n\n\t\tslide.init()\n\t}\n\n\t// events = {\n\t// \t'click [data-my-button]': 'onClick'\n\t// }\n\n\t/** *\n\t * @memberof Carousel\n\t * @method unmount\n\t * @desc remove the events\n\t *\n\t * @return {void}\n\t */\n\tunmount = () => {\n\t\t// this.$$events.destroy()\n\t}\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n"],"sourceRoot":""}