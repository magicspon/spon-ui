{"version":3,"sources":["webpack:///./core/modules/createEvents.js","webpack:///./utils/eventPromise.js","webpack:///./utils/animationEnd.js","webpack:///./ui/Dropdown.js"],"names":["createEvents","ramda__WEBPACK_IMPORTED_MODULE_1__","context","obj","$delegate","emit","_this","this","events","Object","entries","map","_ref","_ref2","_slicedToArray","key","fn","eventAndNode","capture","funk","_toConsumableArray","concat","handleFunctions","evt","transform","fns","event","_$delegate","apply","item","_ref3","_ref4","a","b","join","attachAll","root","arguments","length","undefined","dom_delegate__WEBPACK_IMPORTED_MODULE_0___default","_$delegate2","on","err","console","error","attach","remove","destroy","_$delegate3","off","$node","document","createEvent","initEvent","dispatchEvent","module","hot","accept","eventPromise","element","callback","complete","Promise","resolve","addEventListener","done","e","stopPropagation","removeEventListener","target","bind","animationEnd","es","types","OTransition","WebkitTransition","MozTransition","transition","OAnimation","WebkitAnimation","MozAnimation","animation","elem","createElement","keys","reduce","prev","trans","style","Dropdown_DropDown","DropDown","el","options","_classCallCheck","_defineProperty","updateText","interceptLinks","closeOnClick","$$events","click [data-dropdown-button]","blur [data-dropdown-item]","click [data-dropdown-item]","click [data-dropdown-reset]","preventDefault","action","machine","state","CLICK","setTimeout","activeElement","$button","closest","close","elm","_this$options","$selectedItem","classList","text","textContent","trim","$label","then","$reset","display","add","originalText","$dropdown","$items","focus","_objectSpread","defaults","assign","mitt_es","$el","call","querySelector","querySelectorAll","open"],"mappings":"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","file":"3.bundle.1537312226028.js","sourcesContent":["import Delegate from 'dom-delegate'\nimport * as R from 'ramda'\n\n/**\n * @namespace createEvents\n */\n\n// do not use an array function... we need to be able to bind\nexport const createEvents = R.curry(function(context, obj) {\n\tconst events = Object.entries(obj).map(([key, fn]) => {\n\t\tconst eventAndNode = R.compose(R.map(R.trim), R.split(' '))(key)\n\t\tconst capture = !!R.compose(R.length, R.match(/(blur|mouse)/g), R.head)(\n\t\t\teventAndNode\n\t\t)\n\t\tconst funk = typeof fn === 'string' ? this[fn] : fn\n\t\treturn [...eventAndNode, funk, capture]\n\t})\n\n\tlet $delegate\n\tlet emit\n\n\tconst handleFunctions = R.curry((evt, transform, fns) => {\n\t\tR.compose(\n\t\t\tR.forEach(event => {\n\t\t\t\t$delegate[transform](...event)\n\t\t\t}),\n\t\t\tR.map(item =>\n\t\t\t\tR.find(([a, b]) => {\n\t\t\t\t\t// alls add/remove of events without a selector - things like keydown/keyup\n\t\t\t\t\tif (typeof b === 'function') {\n\t\t\t\t\t\treturn a === item\n\t\t\t\t\t}\n\t\t\t\t\treturn [a, b].join(' ') === item\n\t\t\t\t})(evt)\n\t\t\t)\n\t\t)(fns)\n\t})(events)\n\n\treturn {\n\t\t/**\n\t\t * @memberof createEvents\n\t\t * @function attachAll\n\t\t * @param {HTMLElement} root - the element to delegate to\n\t\t */\n\t\tattachAll(root = context) {\n\t\t\t$delegate = $delegate || new Delegate(root)\n\t\t\ttry {\n\t\t\t\tR.forEach(event => $delegate.on(...event))(events)\n\t\t\t} catch (err) {\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\tconsole.error(\n\t\t\t\t\t'Handler must be a type of Function, careful with arrow functions, they will need to be above the events object:',\n\t\t\t\t\terr\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @memberof createEvents\n\t\t * @function attach\n\t\t * @param {Array} fns - an array of cuntions\n\t\t * @param {HTMLElement} root - the element to delegate to\n\t\t * @return {void}\n\t\t */\n\t\tattach(fns, root = context) {\n\t\t\t$delegate = $delegate || new Delegate(root)\n\t\t\thandleFunctions('on', fns)\n\t\t},\n\n\t\t/**\n\t\t * @memberof createEvents\n\t\t * @function remove\n\t\t * @param {Array} fns - an array of cuntions\n\t\t * @return {void}\n\t\t */\n\t\tremove(fns) {\n\t\t\tif (!$delegate) return\n\t\t\thandleFunctions('off', fns)\n\t\t},\n\n\t\t/**\n\t\t * @memberof createEvents\n\t\t * @function destroy\n\t\t * @return {void}\n\t\t */\n\t\tdestroy() {\n\t\t\tif (!$delegate) return\n\t\t\tR.forEach(event => $delegate.off(...event))(events)\n\t\t},\n\n\t\t/**\n\t\t * @memberof createEvents\n\t\t * @function destroy\n\t\t * @param {HTMLElement} root - the element to trigger an event on\n\t\t * @param {String} event - the name of the event to trigger\n\t\t * @return {void}\n\t\t */\n\t\temit($node, event) {\n\t\t\temit = emit || document.createEvent('HTMLEvents')\n\t\t\temit.initEvent(event, true, false)\n\t\t\t$node.dispatchEvent(emit)\n\t\t}\n\t}\n})\n\n/**\n * Create a router\n * @mixin EventsMixin\n * @description class used to manage adding/removing delegated dom events\n *\n * @example\n * import Behaviour, { mix } from '@/core/Behaviour'\n * import {\n * \tEventsMixin,\n * } from '@/core/modules/'\n *\n * export default class ExampleWithAllTheThings extends mix(Behaviour).with(\n * \tEventsMixin\n * ) {\n * \tevents = {\n * \t\t'click [data-link]': 'onClick'\n * \t}\n *\n * \tmount = () => {\n * \t\t// attach all the events\n * \t\tthis.$$events.attachAll()\n * \t\t// attach events by key\n * \t\tthis.$$events.attach(['click [data-link]'])\n * \t\t// remove events by key\n * \t\tthis.$$events.remove(['click [data-link]'])\n * \t\t// destroy all the events\n * \t\tthis.$$events.destroy()\n * \t}\n *\n * \tonClick = (e, elm) => {\n * \t\te.preventDefault()\n * \t\telm.classList.toggle('huzzah')\n * \t}\n * }\n * @return {EventsMixin}\n */\nexport const EventsMixin = superclass =>\n\tclass extends superclass {\n\t\tinit() {\n\t\t\tthis.$$events = createEvents.call(this, this.$el, this.events)\n\n\t\t\tif (super.init) super.init()\n\n\t\t\treturn this\n\t\t}\n\n\t\tdestroy() {\n\t\t\tthis.$$events.destroy()\n\t\t\tif (super.destroy) super.destroy()\n\t\t}\n\t}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","export default (event, element, callback) => {\n\tlet complete = false\n\n\tconst done = (resolve, e) => {\n\t\te.stopPropagation()\n\t\telement.removeEventListener(event, done)\n\t\tif (e.target === element && !complete) {\n\t\t\tcomplete = true\n\t\t\tresolve()\n\t\t}\n\t}\n\n\treturn new Promise(resolve => {\n\t\tcallback()\n\t\telement.addEventListener(event, done.bind(null, resolve))\n\t})\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import * as R from 'ramda'\n\nexport default R.memoizeWith(R.identity, (type = 'transition') => {\n\tconst types =\n\t\ttype === 'transition'\n\t\t\t? {\n\t\t\t\tOTransition: 'oTransitionEnd',\n\t\t\t\tWebkitTransition: 'webkitTransitionEnd',\n\t\t\t\tMozTransition: 'transitionend',\n\t\t\t\ttransition: 'transitionend'\n\t\t\t  }\n\t\t\t: {\n\t\t\t\tOAnimation: 'oAnimationEnd',\n\t\t\t\tWebkitAnimation: 'webkitAnimationEnd',\n\t\t\t\tMozAnimation: 'animationend',\n\t\t\t\tanimation: 'animationend'\n\t\t\t  }\n\n\tconst elem = document.createElement('div')\n\n\treturn Object.keys(types).reduce(\n\t\t(prev, trans) => (undefined !== elem.style[trans] ? types[trans] : prev),\n\t\t''\n\t)\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import { createEvents } from '@/core/modules/createEvents'\nimport eventPromise from '@/utils/eventPromise'\nimport animationEnd from '@/utils/animationEnd'\nimport mitt from 'mitt'\n\n/** *\n * @namespace Dropdown\n * @class Dropdown\n * @description Handles dropdowns\n *\n * @example\n *\n * Required markup:\n *\n * html:\n * <div data-ui=\"Dropdown\" data-ui-options='{\"update-text\": true, \"intercept-links\": true}' data-ui-key=\"downloads-dropdown\">\n * \t<button data-dropdown-button>\n * \t\t<span class=\"mr-1\" data-dropdown-text>View all products</span>\n * \t</button>\n * \t<div data-dropdown-menu>\n * \t\t<ul class=\"list-reset\">\n * \t\t\t<li data-dropdown-reset role=\"button\" tabindex=\"0\">Reset</li>\n * \t\t\t<li>\n * \t\t\t\t<a data-dropdown-item>item</a>\n * \t\t\t</li>\n * \t\t\t<li>\n * \t\t\t\t<a data-dropdown-item>item</a>\n * \t\t\t</li>\n * \t\t\t<li>\n * \t\t\t\t<a data-dropdown-item>item</a>\n * \t\t\t</li>\n * \t\t</ul>\n * \t</div>\n * </div>\n *\n * @param {HTMLElement} el - node to bind to\n * @param {Object} options - options\n * @param {String} key - key name\n *\n * @property {Boolean} options.updateText - should the dropdown text update to reflect the selected item\n * @property {Boolean} options.interceptLinks - should any links called prevent default\n * @property {Boolean} options.closeOnClick - should the dropdown close when an item is clicked\n *\n * @return {DropDown}\n */\n\nexport default class DropDown {\n\tdefaults = {\n\t\tupdateText: false,\n\t\tinterceptLinks: false,\n\t\tcloseOnClick: true\n\t}\n\n\tconstructor(el, options, key) {\n\t\tthis.options = { ...this.defaults, ...options }\n\t\tthis.key = key\n\n\t\tObject.assign(this, mitt())\n\n\t\tthis.$el = el\n\t\t// bind the dom events\n\t\tthis.$$events = createEvents.call(this, this.$el, this.events)\n\n\t\tthis.$reset = this.$el.querySelector('[data-dropdown-reset]')\n\t\tthis.$label = this.$el.querySelector('[data-dropdown-text]')\n\t\tthis.$button = this.$el.querySelector('[data-dropdown-button]')\n\t\tthis.$dropdown = this.$el.querySelector('[data-dropdown-menu]')\n\t\tthis.$items = [...this.$el.querySelectorAll('[data-dropdown-item]')]\n\n\t\tthis.originalText = this.$label.textContent\n\n\t\t// the state machine... will always invoke the next stage of state\n\t\t// https://en.wikipedia.org/wiki/Finite-state_machine\n\t\tthis.machine = {\n\t\t\topen: { CLICK: 'close' },\n\t\t\tclose: { CLICK: 'open' }\n\t\t}\n\n\t\t// set the inital state\n\t\tthis.state = 'close'\n\n\t\tthis.$selectedItem = null\n\t}\n\n\t/** *\n\t * @memberof Dropdown\n\t * @method mount\n\t * @desc Add the events\n\t *\n\t * @return {void}\n\t */\n\tmount = () => {\n\t\tthis.$$events.attachAll()\n\t}\n\n\t/** *\n\t * @method mount\n\t * @memberof Dropdown\n\t * @desc removes the events\n\t *\n\t * @return {void}\n\t */\n\tunmount = () => {\n\t\tthis.$$events.destroy()\n\t\tthis.off('*')\n\t}\n\n\tevents = {\n\t\t'click [data-dropdown-button]': 'onClick',\n\t\t'blur [data-dropdown-item]': 'onBlur',\n\t\t'click [data-dropdown-item]': 'onItemClick',\n\t\t'click [data-dropdown-reset]': 'onResetClick'\n\t}\n\n\t/** *\n\t * @memberof Dropdown\n\t * @method onClick\n\t * @desc the click event...\n\t * @param {Object} e : the event object\n\t *\n\t * @return {void}\n\t */\n\tonClick = e => {\n\t\te.preventDefault()\n\n\t\tconst action = this.machine[this.state].CLICK\n\n\t\tthis[action]()\n\n\t\tthis.state = action\n\t}\n\n\t/** *\n\t * @memberof Dropdown\n\t * @method onBlur\n\t * @desc the blur event... this is used to close the dropdown when clicking outside\n\t *\n\t * @return {void}\n\t */\n\n\tonBlur = () => {\n\t\t// must be wrapped in a setTimeout\n\t\tsetTimeout(() => {\n\t\t\t// if the active node is the button, do nothing\n\t\t\tif (document.activeElement === this.$button) return\n\n\t\t\t// if the active node is outside of the dropdown\n\t\t\t// close it, reset the state\n\t\t\tif (!document.activeElement.closest('[data-dropdown-menu]')) {\n\t\t\t\tthis.state = 'close'\n\t\t\t\tthis.close()\n\t\t\t}\n\t\t})\n\t}\n\n\t/** *\n\t * @memberof Dropdown\n\t * @method onItemClick\n\t * @desc handle various options, this is only called when intercept links is true\n\t * @param {Object} e : the event object\n\t * @param {HTMLElement} elm : the element clicked\n\t *\n\t * @return {void}\n\t */\n\tonItemClick = (e, elm) => {\n\t\tconst { interceptLinks, updateText, closeOnClick } = this.options\n\n\t\tif (this.$selectedItem && this.$selectedItem !== elm) {\n\t\t\tthis.$selectedItem.classList.remove('is-selected')\n\t\t}\n\n\t\tif (interceptLinks) {\n\t\t\te.preventDefault()\n\t\t\tthis.emit('dropdown:item:clicked', { elm, key: this.key })\n\t\t}\n\n\t\tif (updateText) {\n\t\t\tconst text = elm.textContent.trim()\n\t\t\tthis.$label.textContent = text\n\t\t}\n\n\t\tif (closeOnClick) {\n\t\t\tthis.close().then(() => {\n\t\t\t\tif (updateText) {\n\t\t\t\t\tthis.$reset.style.display = 'block'\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\telm.classList.add('is-selected')\n\n\t\tthis.$selectedItem = elm\n\t}\n\n\t/** *\n\t * @memberof Dropdown\n\t * @method onResetClick\n\t * @desc reset the dropdown label text and close\n\t * @param {Object} e : the event object\n\t *\n\t * @return {void}\n\t */\n\n\tonResetClick = e => {\n\t\te.preventDefault()\n\t\tthis.$label.textContent = this.originalText\n\n\t\tif (this.$selectedItem) {\n\t\t\tthis.$selectedItem.classList.remove('is-selected')\n\t\t}\n\n\t\tthis.close().then(() => {\n\t\t\tthis.$reset.style.display = ''\n\t\t})\n\t}\n\n\t/** *\n\t * @memberof Dropdown\n\t * @method open\n\t * @desc open the dropdown, once the animation has finished set the focus state\n\t *\n\t * @return {Promise}\n\t */\n\n\topen = () => {\n\t\tthis.$button.classList.add('is-active')\n\n\t\treturn eventPromise(animationEnd('transition'), this.$dropdown, () => {\n\t\t\tthis.$dropdown.classList.add('is-open')\n\t\t}).then(() => {\n\t\t\tthis.$items[0].focus()\n\t\t})\n\t}\n\n\t/** *\n\t * @memberof Dropdown\n\t * @method close\n\t * @desc close the dropdown\n\t *\n\t * @return {void}\n\t */\n\n\tclose = () =>\n\t\teventPromise(animationEnd('transition'), this.$dropdown, () => {\n\t\t\tthis.$button.classList.remove('is-active')\n\t\t\tthis.$dropdown.classList.remove('is-open')\n\t\t\tthis.state = 'close'\n\t\t})\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n"],"sourceRoot":""}